{"ast":null,"code":"import _slicedToArray from \"C:\\\\Ghub\\\\freelancer_portal\\\\new-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from '@stomp/stompjs';\n\nvar SocketConnection = function SocketConnection() {\n  // const [connected, setConnected] = useState(false);\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      connected1 = _useState2[0],\n      setConnected1 = _useState2[1];\n\n  var stompClient = null;\n\n  var connect = function connect() {\n    var socket = new SockJS('/ownsite');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, function (frame) {\n      setConnected1(true);\n      console.log('Connected: ' + frame);\n      stompClient.subscribe('/topic/greetings', function (greeting) {\n        // showGreeting(JSON.parse(greeting.body).content);\n        console.log('Subscribed');\n      });\n    });\n  };\n\n  var disconnect = function disconnect() {\n    if (stompClient !== null) {\n      stompClient.disconnect();\n    }\n\n    setConnected1(false);\n    console.log('Disconnected');\n  };\n\n  var sendMsg = function sendMsg(text) {\n    stompClient.send(\"app/hello\", {}, JSON.stringify({\n      'content': text\n    }));\n  };\n};\n\nexport default SocketConnection;","map":{"version":3,"sources":["C:/Ghub/freelancer_portal/new-app/src/components/Chat/SocketConnection.js"],"names":["React","useState","useEffect","SockJS","Stomp","SocketConnection","connected1","setConnected1","stompClient","connect","socket","over","frame","console","log","subscribe","greeting","disconnect","sendMsg","text","send","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B;AAD2B,kBAESJ,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,MAEpBK,UAFoB;AAAA,MAERC,aAFQ;;AAG3B,MAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAIC,MAAM,GAAG,IAAIP,MAAJ,CAAW,UAAX,CAAb;AACAK,IAAAA,WAAW,GAAGJ,KAAK,CAACO,IAAN,CAAWD,MAAX,CAAd;AACAF,IAAAA,WAAW,CAACC,OAAZ,CAAoB,EAApB,EAAwB,UAAUG,KAAV,EAAiB;AACrCL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,KAA5B;AAEAJ,MAAAA,WAAW,CAACO,SAAZ,CAAsB,kBAAtB,EAA0C,UAAUC,QAAV,EAAoB;AAC1D;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,OAHD;AAIH,KARD;AASH,GAZD;;AAcA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAGT,WAAW,KAAK,IAAnB,EAAwB;AACpBA,MAAAA,WAAW,CAACS,UAAZ;AACH;;AACDV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAND;;AAQA,MAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACtBX,IAAAA,WAAW,CAACY,IAAZ,CAAiB,WAAjB,EAA8B,EAA9B,EAAkCC,IAAI,CAACC,SAAL,CAAe;AAAC,iBAAWH;AAAZ,KAAf,CAAlC;AACH,GAFD;AAMH,CAjCD;;AAmCA,eAAed,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from '@stomp/stompjs';\r\n\r\nconst SocketConnection = () => {\r\n    // const [connected, setConnected] = useState(false);\r\n    const [connected1, setConnected1] = useState('');\r\n    let stompClient = null;\r\n\r\n    const connect = () => {\r\n        let socket = new SockJS('/ownsite');\r\n        stompClient = Stomp.over(socket);\r\n        stompClient.connect({}, function (frame) {\r\n            setConnected1(true);\r\n            console.log('Connected: ' + frame);\r\n\r\n            stompClient.subscribe('/topic/greetings', function (greeting) {\r\n                // showGreeting(JSON.parse(greeting.body).content);\r\n                console.log('Subscribed');\r\n            });\r\n        });\r\n    }\r\n\r\n    const disconnect = () => {\r\n        if(stompClient !== null){\r\n            stompClient.disconnect();\r\n        }\r\n        setConnected1(false);\r\n        console.log('Disconnected');\r\n    }\r\n\r\n    const sendMsg = (text) => {\r\n        stompClient.send(\"app/hello\", {}, JSON.stringify({'content': text}));\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default SocketConnection;"]},"metadata":{},"sourceType":"module"}