{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Ghub\\\\freelancer_portal\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Ghub\\\\freelancer_portal\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Ghub\\\\freelancer_portal\\\\Frontend\\\\src\\\\components\\\\Chat\\\\Chat.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport SockJS from 'sockjs-client';\nimport Stomp from '@stomp/stompjs'; // For now here will be commented code, because more likely I will use it in future\n// for properly interacting with websockets\n\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport { sendMessageToServer, connect, setMessageHandler, addHandler } from '../../util/ws';\nimport './Chat.css';\nexport var Chat = function Chat(_ref) {\n  var location = _ref.location;\n\n  // here are 'react useState hooks' it's kind of a class properties but for functional components \n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1]; // messageObj represents message data namely text and sender name \n\n\n  var _useState7 = useState({\n    text: 'qwe',\n    sender: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messageObj = _useState8[0],\n      setMessageObj = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1]; // just text of current typed message\n\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      messages = _useState12[0],\n      setMessages = _useState12[1];\n\n  var ENDPOINT = \"http://localhost:8080\";\n  useEffect(function () {\n    var _queryString$parse = queryString.parse(location.search),\n        name = _queryString$parse.name,\n        room = _queryString$parse.room; // parse specified data from URL to pair (tuple)\n\n\n    setRoom(room); // set user name and his room\n\n    setName(name);\n    connect(name, room); // connect to WebSocket\n\n    var greetingMsg = {\n      text: \"Hello \".concat(name),\n      sender: 'admin'\n    }; // just a greeting mesage\n    // setMessages((messages) => [...messages, greetingMsg]); // add greeting message from admin\n\n    addHandler(function (curMessage) {\n      if (curMessage.sender === name || curMessage.content === null) return;\n      setMessages(function (messages) {\n        return [].concat(_toConsumableArray(messages), [{\n          text: curMessage.content,\n          sender: curMessage.sender\n        }]);\n      });\n      console.log(messages);\n    });\n  }, [ENDPOINT, location.search]); // Helping method for saving message and messageObj\n  // I united two setters in one method, because, as I noticed, they don't work properly separately in Input.js\n  // and I don't know why may be here are some problems with asynchronous. \n\n  var saveBoth = function saveBoth(value) {\n    setMessage(value);\n    setMessageObj(function () {\n      return {\n        text: value,\n        sender: name\n      };\n    });\n  };\n\n  var saveMessage = function saveMessage(value) {\n    setMessage(value);\n  }; // method of sending message\n\n\n  function sendMessage(event) {\n    event.preventDefault();\n    var calc = message.match(/[\\s]*/); // \n\n    if (message && calc[0] != message) {\n      sendMessageToServer(message);\n      setMessages(function (messages) {\n        return [].concat(_toConsumableArray(messages), [{\n          text: message,\n          sender: name\n        }]);\n      });\n      setMessage('');\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    sendMessage: sendMessage,\n    saveBoth: saveMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Chat;","map":{"version":3,"sources":["C:/Ghub/freelancer_portal/Frontend/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","SockJS","Stomp","Messages","InfoBar","Input","sendMessageToServer","connect","setMessageHandler","addHandler","Chat","location","name","setName","room","setRoom","users","setUsers","text","sender","messageObj","setMessageObj","message","setMessage","messages","setMessages","ENDPOINT","parse","search","greetingMsg","curMessage","content","console","log","saveBoth","value","saveMessage","sendMessage","event","preventDefault","calc","match"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport SockJS from 'sockjs-client';\nimport Stomp from '@stomp/stompjs';\n\n// For now here will be commented code, because more likely I will use it in future\n// for properly interacting with websockets\n\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport {sendMessageToServer, connect, setMessageHandler, addHandler} from '../../util/ws';\n\nimport './Chat.css';\n\nexport const Chat = ({ location }) => {\n  // here are 'react useState hooks' it's kind of a class properties but for functional components \n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n\n  // messageObj represents message data namely text and sender name \n  const [messageObj, setMessageObj] = useState({ text:'qwe', sender:'' });\n  const [message, setMessage] = useState(''); // just text of current typed message\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"http://localhost:8080\";\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);  // parse specified data from URL to pair (tuple)\n    setRoom(room); // set user name and his room\n    setName(name);\n    connect(name, room); // connect to WebSocket\n    const greetingMsg = {text: `Hello ${name}`, sender: 'admin'}; // just a greeting mesage\n    // setMessages((messages) => [...messages, greetingMsg]); // add greeting message from admin\n\n    addHandler( curMessage => {\n      if (curMessage.sender === name || curMessage.content === null) return;\n      setMessages(messages => [...messages, {text:curMessage.content, sender:curMessage.sender}]);     \n      console.log(messages);\n    }); \n\n  }, [ENDPOINT, location.search]);\n\n  \n  // Helping method for saving message and messageObj\n  // I united two setters in one method, because, as I noticed, they don't work properly separately in Input.js\n  // and I don't know why may be here are some problems with asynchronous. \n  const saveBoth = (value) => {\n    setMessage(value);\n    setMessageObj(() =>({\n      text: value,\n      sender: name,\n    }));\n  }\n\n  const saveMessage = (value) => {\n    setMessage(value);\n  }\n  \n  // method of sending message\n  function sendMessage(event) {  \n    event.preventDefault();\n    let calc = message.match(/[\\s]*/); // \n    if (message && calc[0] != message) {\n      sendMessageToServer(message);\n      setMessages((messages) => [...messages, {text:message, sender:name}]); \n      setMessage('');\n    }\n  };\n\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n        <InfoBar room={room} />\n        <Messages messages={messages} name={name} />\n        <Input message={message} sendMessage={sendMessage} saveBoth={saveMessage} />\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}