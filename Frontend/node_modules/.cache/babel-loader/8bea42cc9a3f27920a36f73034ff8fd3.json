{"ast":null,"code":"import SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nvar stompClient = null;\nvar handlers = [];\nexport function connect() {\n  var socket = new SockJS('/ownsite');\n  stompClient = Stomp.over(socket);\n\n  stompClient.debug = function () {};\n\n  stompClient.connect({}, function (frame) {\n    stompClient.subscribe('/topic/method', function (message) {\n      handlers.forEach(function (handler) {\n        return handler(JSON.parse(message.body));\n      });\n    });\n  });\n  console.log('Connected');\n}\nexport function addHandler(handler) {\n  handlers.push(handler);\n}\nexport function disconnect() {\n  if (stompClient !== null) {\n    stompClient.disconnect();\n  }\n\n  console.log(\"Disconnected\");\n}\nexport function sendMessage(message) {\n  stompClient.send(\"/app/hello\", {}, JSON.stringify(message));\n}","map":{"version":3,"sources":["C:/Ghub/freelancer_portal/new-app/src/util/ws.js"],"names":["SockJS","Stomp","stompClient","handlers","connect","socket","over","debug","frame","subscribe","message","forEach","handler","JSON","parse","body","console","log","addHandler","push","disconnect","sendMessage","send","stringify"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,IAAIC,WAAW,GAAG,IAAlB;AACA,IAAMC,QAAQ,GAAG,EAAjB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACtB,MAAMC,MAAM,GAAG,IAAIL,MAAJ,CAAW,UAAX,CAAf;AACAE,EAAAA,WAAW,GAAGD,KAAK,CAACK,IAAN,CAAWD,MAAX,CAAd;;AACAH,EAAAA,WAAW,CAACK,KAAZ,GAAoB,YAAM,CAAE,CAA5B;;AACAL,EAAAA,WAAW,CAACE,OAAZ,CAAoB,EAApB,EAAwB,UAAAI,KAAK,EAAI;AAC7BN,IAAAA,WAAW,CAACO,SAAZ,CAAsB,eAAtB,EAAuC,UAAAC,OAAO,EAAI;AAC9CP,MAAAA,QAAQ,CAACQ,OAAT,CAAiB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,IAAnB,CAAD,CAAX;AAAA,OAAxB;AACH,KAFD;AAGH,GAJD;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AAED,OAAO,SAASC,UAAT,CAAoBN,OAApB,EAA6B;AAChCT,EAAAA,QAAQ,CAACgB,IAAT,CAAcP,OAAd;AACH;AAED,OAAO,SAASQ,UAAT,GAAsB;AACzB,MAAIlB,WAAW,KAAK,IAApB,EAA0B;AACtBA,IAAAA,WAAW,CAACkB,UAAZ;AACH;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AAED,OAAO,SAASI,WAAT,CAAqBX,OAArB,EAA8B;AACjCR,EAAAA,WAAW,CAACoB,IAAZ,CAAiB,YAAjB,EAA+B,EAA/B,EAAmCT,IAAI,CAACU,SAAL,CAAeb,OAAf,CAAnC;AACH","sourcesContent":["import SockJS from 'sockjs-client'\r\nimport { Stomp } from '@stomp/stompjs'\r\n\r\n\r\nlet stompClient = null\r\nconst handlers = []\r\n\r\nexport function connect() {\r\n    const socket = new SockJS('/ownsite')\r\n    stompClient = Stomp.over(socket)\r\n    stompClient.debug = () => {}\r\n    stompClient.connect({}, frame => {\r\n        stompClient.subscribe('/topic/method', message => {\r\n            handlers.forEach(handler => handler(JSON.parse(message.body)))\r\n        })\r\n    })\r\n    console.log('Connected')\r\n}\r\n\r\nexport function addHandler(handler) {\r\n    handlers.push(handler)\r\n}\r\n\r\nexport function disconnect() {\r\n    if (stompClient !== null) {\r\n        stompClient.disconnect()\r\n    }\r\n    console.log(\"Disconnected\")\r\n}\r\n\r\nexport function sendMessage(message) {\r\n    stompClient.send(\"/app/hello\", {}, JSON.stringify(message))\r\n}"]},"metadata":{},"sourceType":"module"}